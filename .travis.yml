# This script is used by the Travis-CI (continuous integration) testing
# framework to run Simbody's tests with every GitHub push or pull-request.
language: cpp

# Use newer container-based infrastructure.
sudo: false

os:
  - linux
  - osx

compiler:
  - gcc
  - clang
  
matrix:
  exclude:
    - os: osx
      compiler: gcc

env:
  global:
    - BTYPE=Release
  
addons:
  # Dependencies on linux.
  apt:
    sources:
      # For gcc >= 4.8
      - ubuntu-toolchain-r-test
      # For cmake >= 2.8.8
      - kubuntu-backports
    packages:
      - cmake
      - liblapack-dev
      # Next 3 are for the visualizer.
      - freeglut3-dev
      - libxi-dev
      - libxmu-dev
      # C++11 on Ubuntu. Update to gcc 4.8, which provides full C++11 support.  We
      # use this script because if building Simbody with C++11, we need gcc-4.8,
      # and the Travis Ubuntu 12.04 machines have an older version of gcc. Even if
      # building with Clang, we need the newer libstdc++ that we get by updating to
      # gcc-4.8.  See https://github.com/travis-ci/travis-ci/issues/979.
      - g++-4.8

before_install:
  ## Ensure that there are no tabs in source code.
  # GREP returns 0 (true) if there are any matches, and
  # we don't want any matches. If there are matches,
  # print a helpful message, and make the test fail by using "false".
  # The GREP command here checks for any tab characters in the the files
  # that match the specified pattern. GREP does not pick up explicit tabs
  # (e.g., literally a \t in a source file).
  # This grep command is invalid on osx.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if grep --recursive --include={*.cpp,*.c,*.h,*.md,*.yml,*.cmake.*.xml,*.html,*.in,*.txt} -P "\t" . ; then echo "Tabs found in the lines shown above. See CONTRIBUTING.md about tabs."; false; else echo "Repo passed no-tabs check."; fi; else echo "No-tabs check not performed."; fi

  # Make sure we use the newer gcc.
  - if [[ "$TRAVIS_OS_NAME" = "linux" && "$CXX" = "g++" ]]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  
install:
  - mkdir ~/simbody-build && cd ~/simbody-build
  # Configure.
  - cmake $TRAVIS_BUILD_DIR -DCMAKE_BUILD_TYPE=$BTYPE -DCMAKE_CXX_FLAGS=-Werror -DCMAKE_INSTALL_PREFIX=$HOME/simbody-install
  # Build.
  - make -j8

script:
  ## Test Simbody.
  - ctest -j8 --output-on-failure

  ## Make sure we can install with no issues.
  - make -j8 install
